package chap1_what_is_functional_programm;

public class script_1 {
    /*
            函数式编程：是一种编程范式，有如下的特点

              1. 函数式一等公民
              2. 匿名函数
              3. 闭包
              4. 柯里化
              5. 堕性求值
              6. 参数多肽
              7. 代数数据类型

            和『函数式编程』对应的是，『命令式编程』
            『命令式编程』: 是正对这个过程而言的，也就是每一步告诉该去『做』什么，描述一系列条件区分的改变，也就是整个过程中会有新值得产生，会有赋值等。
            『函数式编程』： 是没有赋值发送的。
                1. 没有变量改变
                2. 没有打印到控制台或者其他设备
                3. 没有写入文件，数据库，网络等
                4. 没有异常抛出
                上面说到的，没有副作用(新值产生，或者有变量发送改变)是正对是否外界可见的，如果某些改变，但是对外界不可见，这也称之为是『没有副作用的』
                也就是有一个函数，你只关系它的输入和输出的变化

             上述的函数式编程的特定只是理想状态下的

             『函数式编程』的优势：
                1. 它们的确定性的，所以是易于判断的
                2. 易于测试，因为没有副作用
                3. 更加模块化，
                4. 复合为更加高级抽象的程序
                5. 天然的线程安全，因为他防止了共享状态的变化

             一个函数什么事情也不会做，只依赖于参数而已

             一个例子：


             这个例子：
             函数式编程，通过复合没有副作用的纯函数来编写代码，这些函数可能表示为方法

             总结：
                1. 函数式编程就是使用函数来编程，返回结果，没有任何副作用
                2. 函数式编程容易推断，也容易写测试
                3. 函数式编程提供了高层次的抽象和重用
                4. 函数式编程比命令式更加健壮
                5. 函数式编程避免了共享可变状态，更加安全
     */
}
